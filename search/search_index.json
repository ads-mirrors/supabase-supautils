{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"supautils Documentation : https://supabase.github.io/supautils Source Code : https://github.com/supabase/supautils supautils is a PostgreSQL extension providing: Enhanced security for modifying roles The supabase SQL standard library Experimental/Unstable of the supabase hosted platform (behind setting flags)","title":"Welcome"},{"location":"#supautils","text":"Documentation : https://supabase.github.io/supautils Source Code : https://github.com/supabase/supautils supautils is a PostgreSQL extension providing: Enhanced security for modifying roles The supabase SQL standard library Experimental/Unstable of the supabase hosted platform (behind setting flags)","title":"supautils"},{"location":"contributing/","text":"supautils is OSS. PR and issues are welcome. Development Nix is required to set up the environment. Testing For testing the module locally, execute: # might take a while in downloading all the dependencies $ nix-shell # test on pg 12 $ supautils-with-pg-12 make installcheck # test on pg 13 $ supautils-with-pg-13 make installcheck # you can also test manually with $ supautils-with-pg-12 psql -U rolecreator","title":"Contributing"},{"location":"contributing/#development","text":"Nix is required to set up the environment.","title":"Development"},{"location":"contributing/#testing","text":"For testing the module locally, execute: # might take a while in downloading all the dependencies $ nix-shell # test on pg 12 $ supautils-with-pg-12 make installcheck # test on pg 13 $ supautils-with-pg-13 make installcheck # you can also test manually with $ supautils-with-pg-12 psql -U rolecreator","title":"Testing"},{"location":"experimental/","text":"","title":"Experimental"},{"location":"installation/","text":"Tested to work on PostgreSQL 12 and 13. Setup Server Clone this repo and run make && make install To make the extension available to the database add on postgresql.conf : shared_preload_libraries = 'supautils' Database To enable the extension in PostgreSQL we must execute a create extension statement. It is reccomended to create supautils in a schema to avoid naming conflicts. create schema supa ; create extension supautils with schema supa;","title":"Installation"},{"location":"installation/#setup","text":"","title":"Setup"},{"location":"installation/#server","text":"Clone this repo and run make && make install To make the extension available to the database add on postgresql.conf : shared_preload_libraries = 'supautils'","title":"Server"},{"location":"installation/#database","text":"To enable the extension in PostgreSQL we must execute a create extension statement. It is reccomended to create supautils in a schema to avoid naming conflicts. create schema supa ; create extension supautils with schema supa;","title":"Database"},{"location":"role_security/","text":"The supautils extension provides tooling to prevent non-superusers from modifying/granting a set of roles. Say your backend service depends on a connector role for connecting to the database. Also, you need to give database users the ability to create their own roles, i.e. they need the CREATEROLE privilege. A problem arises here, because any database user with CREATEROLE can DROP or ALTER the connector role, making your backend service fail. From role attributes docs : A role with CREATEROLE privilege can alter and drop other roles, too, as well as grant or revoke membership in them . However, to create, alter, drop, or change membership of a superuser role, superuser status is required; CREATEROLE is insufficient for that. The above problem can be solved by configuring this extension to protect the connector role: supautils.reserved_roles = \"connector\" This extension also allows restricting memberships grants for a set of roles. Certain default postgres roles are dangerous to expose to every database user. From pg default roles : The pg_read_server_files, pg_write_server_files and pg_execute_server_program roles are intended to allow administrators to have trusted, but non-superuser, roles which are able to access files and run programs on the database server as the user the database runs as. As these roles are able to access any file on the server file system, they bypass all database-level permission checks when accessing files directly and they could be used to gain superuser-level access , therefore great care should be taken when granting these roles to users. For example, you can restrict doing GRANT pg_read_server_files TO my_role with: supautils.reserved_memberships = \"pg_read_server_files\" Configuration Settings available in postgresql.conf : Protect Roles supautils.reserved_roles = \"supabase_admin,supabase_auth_admin,supabase_storage_admin\" Protect Memberships supautils.reserved_memberships = \"pg_read_server_files, pg_write_server_files, pg_execute_server_program\"","title":"Role Security"},{"location":"role_security/#configuration","text":"Settings available in postgresql.conf :","title":"Configuration"},{"location":"role_security/#protect-roles","text":"supautils.reserved_roles = \"supabase_admin,supabase_auth_admin,supabase_storage_admin\"","title":"Protect Roles"},{"location":"role_security/#protect-memberships","text":"supautils.reserved_memberships = \"pg_read_server_files, pg_write_server_files, pg_execute_server_program\"","title":"Protect Memberships"},{"location":"standard_library/","text":"Library Reference The supabase platform nudges users to collocate compute with data than is typical for PostgreSQL backed applications. As a result, the PostgreSQL standard library Array supa.index TODO supa.reverse TODO supa.unique TODO","title":"Standard Library"},{"location":"standard_library/#library-reference","text":"The supabase platform nudges users to collocate compute with data than is typical for PostgreSQL backed applications. As a result, the PostgreSQL standard library","title":"Library Reference"},{"location":"standard_library/#array","text":"","title":"Array"},{"location":"standard_library/#supaindex","text":"","title":"supa.index"},{"location":"standard_library/#todo","text":"","title":"TODO"},{"location":"standard_library/#supareverse","text":"","title":"supa.reverse"},{"location":"standard_library/#todo_1","text":"","title":"TODO"},{"location":"standard_library/#supaunique","text":"","title":"supa.unique"},{"location":"standard_library/#todo_2","text":"","title":"TODO"}]}